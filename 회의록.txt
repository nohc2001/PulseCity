2025-06-12  2:30
----------------------
1. 졸작지도교수 신청
 - 노훈철 2021180007 010-2365-6395  nohc2001@naver.com  (클라 + 서버)
 - 임동건 2021182032  010-6690-6923 do020415@naver.com (클라)
 - 진성준 2021182037 010-7770-2108 wlstjdwns2108@naver.com (서버)

   정내훈 : 010-8964-9524

2. DirectX12, Online-Multiplayer-RPG

3. 오늘 몇팀이 상담예정 => 상담을 받아보고 팀을 선택하겠다 => 오늘내로 email로 결과를 알려주겠다.

4. 여름방학때 최우선으로 할 것 : 현장실습
 - 그다음 :  DX12, 네트워크 프로그래밍

5. 네트워크 프로그래밍 공부?
 - 게임서버프로그래밍교과서를 사서 공부하자.

2025-06-16
-------------
1. 다음 미팅
 - 7월 7일 월요일 오후 5시 30분
 - 노훈철, 진성준  (임동건은 너무 멀어서...)

2. GITHUB 프로젝트 생성, 지도교수 초대 : zzapuno@hotmail.com

3. ToDo
 - 어떤 게임을 만들지 서로 의논해 오기.    => 논의 결과를 메모장에 적어서 GITHUB에 올리기
 - DX12 : 정육면체를 만들어서 화살표로 동서남북 이동시키는 프로그램 작성  => 프로그램 소스 코드를 GITHUB에 올리기

 - 서버 : 게임서버프로그래밍 교과서를 공부해서 : Echo Client/Server 만들기.  => 프로그램 소스 코드를 GITHUB에 올리기
    1. Client : 사용자가 문자열을 타이핑하면 그 문자열을 네트워크를 통해 서버로 전송
    2. Server : 클라이언트가 전송한 문자열을 받아서 그대로 클라이언트에 전송
    3. Client : 서버가 보낸 문자열을 화면에 출력 Goto 1.

2025-07-07
-------------
1. 게임 장르 선정
 - MMORPG, 슈팅게임 (1인칭, 3인칭 전환)
 - 미래, 도시 배경
2. 숙제
 - 둥그런 객체를 WASD로 이동
 - Echo Server 제작 (교과서에 있는 Imsys 라이브러리 사용)
3. Github 생성
4. ToDo
 - Client : Shading 넣기, 바닥에 정사각형 바닥 깔기
 - 서버 : 클라이언트 연동.
  * 클라이언트에서 WASD 키를 누르면 누른 키를 서버에 전송
  * 서버에서는 WASD에 맞춰서 X와 Z좌표를 수정
  * 서버는 클라이언트에 수정된 X와 Z좌표를 전송
  * 클라이언트는 서버에서 보내준 X와 Z좌표로 객체 이동
  * 반복
  * 클라이언트는 메이루프가 계속 돌아가야하고 멈추면 안된다.
     => 클라이언트에서 Recv를 할 때 non-blocking 모드로 Recv해야 한다.
 - Option : 다중 접속 
  서버에 여러 클라이언트가 접속할 수 있고, 옆의 클라의 움직임이 실시간으로 보인다.
 - Option : 장애물 충돌
   맵 곳곳에 직육면체 벽을 세워 놓고 이동시 충돌검사.

5. 다음 미팅
 - 8월 4일 월요일 오후 5시 30분
6. 외부라이브러리 사용 지침
 - 외부 라이브러리를 사용해도 문제없음. 단 중점연구과제로 인정이 안됨
  * Assimp, FBXSDK, IMASYS, FMOD ....
 - 게임엔진 수준의 라이브리면 게임엔진 그룹에서 심사를 받아야 함.
  * Unreal, INFLEARN, UNITY....
7. 중점연구과제
 - 기술 : 수업시간에 실습하지 않은 새로운 테크닉 구현 (4학년 학생 1년동안 고생하면 구현할 수준의 난이도, 기존에 존재하는 테크닉을 새로 구현하는 것도 상관 없음)
   예) 클라이언트 : 멀티쓰레드 최적화, 모바일 최적화, 물리엔진 연동, MOD연동 시스템, VULKAN사용, C++이외의 다른 언어 사용 (예:Go, RUST. Python은 너무 쉬워서 제외), RayTracing구현 ... 3D Sound
   예) 서버 : 동접 5000(MMO 기준),  다른 언어 사용 (Go, Elixir, RUST...), RIO사용, ioUring 사용, Seamless Zone 구현, 물리엔진 연동, AI NPC 구현
 - 양 : 스테이지, 퀘스트, 맵, 스킬, 몬스터 같은 것을 정말 많은 종류 구현해서 풍성한 컨텐츠 제작
 - 창의성 : 지금 까지 없었던 새로운 게임플레이 방식 구현

2025-08-04
--------------
1. 진행상황
 - 인체모델 렌더링
 - Point Light 구현
 - Shading (Phong Shading 구현)
 - 동접 16명까지 서버에서 동기화

2. 다음 과제
 - 그래픽 : 텍스쳐 입히기
  * 인체모델에 텍스쳐 입히기
  * 바닥에 타일 깔기
  * Light에 Directional Light 추가.
  * GraduationProject004에 서버 동기화구현 (FPS 카메라, 장애물)
 - 서버 : 
  * 회전 동기화
  * 장애물 구현 (클라와 동일한 데이터와 동일한 코드로 충돌검사)
  * NPC 추가 (20마리의 NPC가 랜덤하게 맵을 돌아다닌다.)  맵의 넓이 가로 세로 2배씩 확장, 맵 끝에가면 멈춤

3. 다음 미팅
 -8월 25일 월요일 오후 2시

2025-08-25
-------------
0. 임동건 결석 (거리의 제약 : 회의내용 공유 예정)
1. 진행상황
 - Directional Light와 Spot Light 추가
 - 벽 추가
 - Texture 입힘
 - 서버 : NPC 추가, NPC의 공격, PC의 공격, HP 및 사망상태 구, 간단한 NPC AI 구현(플레이어 공격)
  * 벽과의 충돌 구현
  * 아직 서버 동기화의 버그가 있어서 동료 플레이어가 보이지 않음
2. 다음 과제
 - 클라이언트
  * UI (Text 출력 포함) => HP Bar, NPC HP Bar, 총알 장탄수, Kill/Death 카운터, 플레이어 이름 써주기,
 - 서버
  * 다른 플레이어가 클라이언트에서 보이도록
  * 사망시 NPC 제거, Respawn
  * UI에 필요한 정보 보내주기 (HP, 장탄수, KD 개수, 플레이어의 이름....)
3. 중점연구과제를 고민해 보자.
 - 기술 : 수업시간에 실습하지 않은 새로운 테크닉 구현 (4학년 학생 1년동안 고생하면 구현할 수준의 난이도, 기존에 존재하는 테크닉을 새로 구현하는 것도 상관 없음)
   예) 클라이언트 : 멀티쓰레드 최적화, 모바일 최적화, 물리엔진 연동, MOD 연동 시스템, VULKAN사용, C++이외의 다른 언어 사용 (예:Go, RUST. Python은 너무 쉬워서 제외), RayTracing구현 ... 3D Sound
       * 자동생성 Level of Detail, Cascaded Shadow Map 
   예) 서버 : 동접 5000(MMO 기준),  다른 언어 사용 (Go, Elixir, RUST...), RIO사용, ioUring 사용, Seamless Zone 구현, 물리엔진 연동, AI NPC 구현
 - 양 : 스테이지, 퀘스트, 맵, 스킬, 몬스터 같은 것을 정말 많은 종류 구현해서 풍성한 컨텐츠 제작
 - 창의성 : 지금 까지 없었던 새로운 게임플레이 방식 구현
4. 다음 미팅
 - 9월 11일 목요일 오후 4시 30분
5. 작업일지 작성
 - 매주 학과에서 나줘준 포맷에 맟추서 작업일지를 작성해서 Git에 올린다.
  

2025-09-11
--------------
1. 진행상황
 - 멀티플레이어 동기화가 된다
  * 가끔가다 안된다.
 - 클라이언트 실행시 CRASH 발생확률이 매우 높다.
 - UI 구현
  * Open Source (https://github.com/kv01/ttf-parser) => 최적화와 큭수효과를 잘 구현하면 중점연구과제로 가능하지 않은가?????
  * HP BAR, KD Count, 총알
 - 사망시 제거/Respawn
2. ToDo
 - Texture가 들어있는 3D 파일 로딩
  * 파일 포맷 (텍스쳐와 애니메이션이 같이들어가야 한다.) : OBJ (X, no animation), FBX, GLTF, Custom Format (Unity Script로 제작한 포맷, 이용희 교수님 수업시간에 사용예정)
  * Parser : FBXSDK(너무느리다), ASSIMP (좋다), Unity Custom Parser (쓰기 쉽다),  GLTF Parser Open Source
 - 서버
  * 동기화 버그 수정
  * NPC가 맞았을 때 플레이어 쫒아오기
  * NPC A* 길찾기
3. 다음미팅
 - 9월 25일 오후 4시 30분
4. 기업형 종합설계 => 지도교수가 서류를 만들어서 전달 예정
  https://www.tukorea.ac.kr/tukorea/1096/subview.do?enc=Zm5jdDF8QEB8JTJGYmJzJTJGdHVrb3JlYSUyRjEwNyUyRjE0MzEwNSUyRmFydGNsVmlldy5kbyUzRg%3D%3D
 - 기업과제 : 고성능 한글 TEXT 출력 : 한글 TTF의 Polygon Rendering    => 실무 노훈철
 
2025-09-25
--------------
1. 진행상황
 - ASSIMP와 GLTF를 둘다 같이 하는 것은 말이 안되고, 하나를 골라서 먼저하고, 다 되면 나머지를 시도해야 한다.
   => ASSIMP 당첨
 - Shadow Mapping 구현
 - 동기화 버그 수정
2. 못한것
 - 모델파일에 있는 Texture를 로딩해서 그리기
 - A* 길찾기 적용
3. ToDo
 - ASSIMP를 사용해서 GLTF 모델에 있는 텍스쳐를 모델에 렌더링 하기.
 - NPC 길찾기
 - 몬스터를 잡으면 바닥에 아이템을 떨어뜨리고,  그 위를 지나가면 아이템을 습득, 클라이에서 인벤토리 버튼을 누르면 습득한 아이템이 보이게
 - 기획 : 직업별 특징 (9개 직업 : 샷건, 머신건, 방패/권총, 쌍권총, 라이플, 스나이퍼, 해커, 메딕, 드론병)
4. 다음미팅
 - 10월 16일 오후 4시 30분

2025-10-16
-------------
1. 진행상황
 - ASSIMP를 사용한 GLTF 파일 로딩
  * 텍스쳐 로딩 : PBR 적용 (Diffuse, Roughness, Metallic, Ambient-Occlusion, Normal) ,  vertex+tangent+bitangent
  * 가능하면 GLB대신 GLTF + BIN를 사용하자.
 - 인벤토리,아이템
 -기획 : 직업 기획
2. ToDo
 - 그림자 넣기
 - 길찾기 넣기
 - 자동차 넣기
 - Unity에서 맵을 구성하고, 정보를 뽑아내서  클라이언트에 전달
  * 클라이언트는 그리는데 사용
 - 화염탱커
  * 장탄수 100, 발사속도 1초 발,  온도게이지 추가
3. 다음 미팅
 - 11월 6일 목요일 오후 4시 30분
